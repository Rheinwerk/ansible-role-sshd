---
#
# tasks file for ansible-role-sshd
#
# vim:et:ts=2:ft=ansible
- name: Install Trusted User CA Public Keys
  lineinfile:
    dest: "/etc/ssh/{{ _sshd.trusted_user_ca.filename }}"
    line: "{{ item }}"
    insertafter: "EOF"
    create: yes
    owner: root
    group: root
    mode: "0644"
  with_items: "{{ _sshd.trusted_user_ca.public_keys }}"
  when: _sshd.trusted_user_ca is defined
  notify:
    - Reload sshd

- name: Create Trusted Principals File
  template:
    src: "etc/ssh/authorized_principals.j2"
    dest: "/etc/ssh/{{ _sshd.authorized_principals.filename }}"
    owner: "root"
    group: "root"
    mode: "0644"
  when: _sshd.authorized_principals is defined
  notify:
    - Reload sshd

- name: Host keys
  when: _sshd.host_keys is defined
  block:
    - name: Install Host Keys - Private
      copy:
        content: "{{ item.private_key }}"
        dest: "/etc/ssh/{{ item.filename }}"
        owner: root
        group: root
        mode: "0600"
      with_items: "{{ _sshd.host_keys }}"
      loop_control:
        label: "{{ item.filename }}"
      no_log: yes
      notify:
        - Reload sshd

    - name: Install Host Keys - Public
      copy:
        content: "{{ item.public_key }}"
        dest: "/etc/ssh/{{ item.filename }}.pub"
        owner: root
        group: root
        mode: "0644"
      with_items: "{{ _sshd.host_keys }}"
      loop_control:
        label: "{{ item.filename }}"
      notify:
        - Reload sshd

- name: Install Host Certificate
  copy:
    content: "{{ _sshd.host_certificate.certificate }}"
    dest: "/etc/ssh/{{ _sshd.host_certificate.filename }}"
    owner: root
    group: root
    mode: "0644"
  when: _sshd.host_certificate is defined

- name: Generate sshd_config
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    owner: root
    group: root
    mode: "0644"
    validate: "sshd -t -f %s"
  with_items:
    - "etc/ssh/sshd_config"
  notify:
    - Reload sshd